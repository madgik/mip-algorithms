
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON LPAREN NUMBER PLUS RPAREN STAR VARexpression : expression PLUS termexpression : termterm : term COLON factorterm : term STAR factorterm : factorfactor : LPAREN expression RPARENfactor : VARfactor : NUMBER'
    
_lr_action_items = {'STAR':([1,2,4,5,11,12,13,14,],[7,-8,-5,-7,-4,-3,-6,7,]),'NUMBER':([0,3,7,8,10,],[2,2,2,2,2,]),'COLON':([1,2,4,5,11,12,13,14,],[8,-8,-5,-7,-4,-3,-6,8,]),'LPAREN':([0,3,7,8,10,],[3,3,3,3,3,]),'VAR':([0,3,7,8,10,],[5,5,5,5,5,]),'PLUS':([1,2,4,5,6,9,11,12,13,14,],[-2,-8,-5,-7,10,10,-4,-3,-6,-1,]),'$end':([1,2,4,5,6,11,12,13,14,],[-2,-8,-5,-7,0,-4,-3,-6,-1,]),'RPAREN':([1,2,4,5,9,11,12,13,14,],[-2,-8,-5,-7,13,-4,-3,-6,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,10,],[1,1,14,]),'expression':([0,3,],[6,9,]),'factor':([0,3,7,8,10,],[4,4,11,12,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','formula_parser_syntax_tree.py',87),
  ('expression -> term','expression',1,'p_expression_term','formula_parser_syntax_tree.py',92),
  ('term -> term COLON factor','term',3,'p_term_colon','formula_parser_syntax_tree.py',97),
  ('term -> term STAR factor','term',3,'p_term_star','formula_parser_syntax_tree.py',102),
  ('term -> factor','term',1,'p_term_factor','formula_parser_syntax_tree.py',108),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','formula_parser_syntax_tree.py',113),
  ('factor -> VAR','factor',1,'p_factor_var','formula_parser_syntax_tree.py',118),
  ('factor -> NUMBER','factor',1,'p_factor_number','formula_parser_syntax_tree.py',123),
]
